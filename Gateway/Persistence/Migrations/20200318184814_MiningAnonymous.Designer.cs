// <auto-generated />
using System;
using Binebase.Exchange.Gateway.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Binebase.Exchange.Gateway.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200318184814_MiningAnonymous")]
    partial class MiningAnonymous
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Binebase.Exchange.Gateway.Domain.Entities.ExchangeOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ExchangeOperations");
                });

            modelBuilder.Entity("Binebase.Exchange.Gateway.Domain.Entities.MiningRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,8)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MiningRequests");
                });

            modelBuilder.Entity("Binebase.Exchange.Gateway.Domain.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrencyAmount")
                        .HasColumnType("decimal(18,8)");

                    b.Property<bool>("IsExchanged")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MiningRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TokenAmount")
                        .HasColumnType("decimal(18,8)");

                    b.HasKey("Id");

                    b.HasIndex("MiningRequestId")
                        .IsUnique();

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("Binebase.Exchange.Gateway.Domain.Entities.ExchangeOperation", b =>
                {
                    b.OwnsOne("Binebase.Exchange.Gateway.Domain.ValueObjects.Pair", "Pair", b1 =>
                        {
                            b1.Property<Guid>("ExchangeOperationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Base")
                                .IsRequired()
                                .HasColumnName("Base")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Quote")
                                .IsRequired()
                                .HasColumnName("Quote")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ExchangeOperationId");

                            b1.ToTable("ExchangeOperations");

                            b1.WithOwner()
                                .HasForeignKey("ExchangeOperationId");
                        });
                });

            modelBuilder.Entity("Binebase.Exchange.Gateway.Domain.Entities.Promotion", b =>
                {
                    b.HasOne("Binebase.Exchange.Gateway.Domain.Entities.MiningRequest", "MiningRequest")
                        .WithOne()
                        .HasForeignKey("Binebase.Exchange.Gateway.Domain.Entities.Promotion", "MiningRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
