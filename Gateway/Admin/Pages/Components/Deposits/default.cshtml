@using Admin.Models;
@model Admin.TransactionsModel

@{
    ViewData["Title"] = "Deposits";
}
<h3>@ViewData["Title"]</h3>

@*<form asp-page="/Users" method="get">
        <div class="form-actions no-color">
            <p>
                Find by name:
                <input type="text" name="SearchString" value="@Model.CurrentFilter" />
                <input type="submit" value="Search" class="btn btn-primary" /> |
                <a asp-page="/Users">Back to full List</a>
            </p>
        </div>
    </form>*@

<table id="myTable" class="table" cellspacing="0">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Transactions[0].Id)
            </th>
            <th>
                <a asp-page="/Users" asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Transactions[0].Id)
                </a>
            </th>
            <th>
                <a asp-page="/Users" asp-route-sortOrder="@Model.DateSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Transactions[0].CreatedBy)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Transactions[0].Balance)
            </th>
            <th>
                <a asp-page="/Users" asp-route-sortOrder="@Model.TwoFactorEnabledSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Transactions[0].Amount)
                </a>
            </th>
            <th>
                <a asp-page="/Users" asp-route-sortOrder="@Model.EmailConfirmedSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Transactions[0].Created)
                </a>
            </th>
            <th />
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Transactions)
        {
            <tr>
                @foreach (var property in item.GetType().GetProperties())
                {
                    <td>@property.GetValue(item)</td>
                }
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Transactions.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Transactions.HasNextPage ? "disabled" : "";
}
<a asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Transactions.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Transactions.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>
<div>@Model.Transactions.PageIndex/@Model.Transactions.TotalPages  Total: @Model.Transactions.Count() users (on page:@Model.Transactions.Count)</div>

