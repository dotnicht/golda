# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

#- task: DotNetCoreCLI@2
#  displayName: 'restore solution'
#  inputs:
#    command: 'restore'
#    projects: '$(solution)'
#    arguments: '--configuration $(buildConfiguration)'

#- script: dotnet build --configuration $(buildConfiguration)
#  displayName: 'dotnet build configuration $(buildConfiguration)'

#- task: DotNetCoreCLI@2
#  displayName: 'dotnet publish $(buildConfiguration)'
#  inputs:
#    command: publish
#    publishWebProjects: True
#    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#    zipAfterPublish: True
    
#- task: publishBuildArtifacts@1
#  displayName: 'publish artifacts'

# separate steps for one service
- task: DotNetCoreCLI@2
  displayName: 'restore Account.Api'
  inputs:
    command: 'restore'
    projects: '**/Account/Api/Api.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'build Account.Api'
  inputs:
    command: 'build'
    projects: '**/Account/Api/Api.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publish Account.Api'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/Account_Api'
    zipAfterPublish: True

